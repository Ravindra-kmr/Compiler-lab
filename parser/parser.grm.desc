
state 0:

	start : . statements 

	ID	shift 7
	INT	shift 6
	WHILE	shift 5
	IF	shift 4
	NIL	shift 3

	start	goto 60
	statements	goto 2
	statement	goto 1

	.	error


state 1:

	statements : statement . statements 

	ID	shift 7
	INT	shift 6
	WHILE	shift 5
	IF	shift 4
	NIL	shift 3

	statements	goto 8
	statement	goto 1

	.	error


state 2:

	start : statements .  (reduce by rule 0)



	.	reduce by rule 0


state 3:

	statements : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 4:

	statement : IF . LPARAN comp_exp RPARAN LBRACE statements RBRACE 
	statement : IF . LPARAN comp_exp RPARAN LBRACE statements RBRACE ELSE LBRACE statements RBRACE 

	LPARAN	shift 9


	.	error


state 5:

	statement : WHILE . LPARAN comp_exp RPARAN LBRACE statements RBRACE 

	LPARAN	shift 10


	.	error


state 6:

	statement : INT . ID ASSIGN arith_exp SEMICOLON 

	ID	shift 11


	.	error


state 7:

	statement : ID . ASSIGN arith_exp SEMICOLON 

	ASSIGN	shift 12


	.	error


state 8:

	statements : statement statements .  (reduce by rule 1)



	.	reduce by rule 1


state 9:

	statement : IF LPARAN . comp_exp RPARAN LBRACE statements RBRACE 
	statement : IF LPARAN . comp_exp RPARAN LBRACE statements RBRACE ELSE LBRACE statements RBRACE 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 15
	exp	goto 14
	comp_exp	goto 13

	.	error


state 10:

	statement : WHILE LPARAN . comp_exp RPARAN LBRACE statements RBRACE 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 15
	exp	goto 14
	comp_exp	goto 18

	.	error


state 11:

	statement : INT ID . ASSIGN arith_exp SEMICOLON 

	ASSIGN	shift 19


	.	error


state 12:

	statement : ID ASSIGN . arith_exp SEMICOLON 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 20
	exp	goto 14

	.	error


state 13:

	statement : IF LPARAN comp_exp . RPARAN LBRACE statements RBRACE 
	statement : IF LPARAN comp_exp . RPARAN LBRACE statements RBRACE ELSE LBRACE statements RBRACE 
	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp . OR comp_exp 

	AND	shift 23
	OR	shift 22
	RPARAN	shift 21


	.	error


state 14:

	arith_exp : exp .  (reduce by rule 20)



	.	reduce by rule 20


state 15:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp . EQ arith_exp 
	comp_exp : arith_exp . LT arith_exp 
	comp_exp : arith_exp . LE arith_exp 
	comp_exp : arith_exp . GE arith_exp 
	comp_exp : arith_exp . NEQ arith_exp 
	comp_exp : arith_exp . GT arith_exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24


	.	error


state 16:

	exp : INT_CONST .  (reduce by rule 22)



	.	reduce by rule 22


state 17:

	exp : ID .  (reduce by rule 21)



	.	reduce by rule 21


state 18:

	statement : WHILE LPARAN comp_exp . RPARAN LBRACE statements RBRACE 
	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp . OR comp_exp 

	AND	shift 23
	OR	shift 22
	RPARAN	shift 34


	.	error


state 19:

	statement : INT ID ASSIGN . arith_exp SEMICOLON 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 35
	exp	goto 14

	.	error


state 20:

	statement : ID ASSIGN arith_exp . SEMICOLON 
	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	SEMICOLON	shift 36


	.	error


state 21:

	statement : IF LPARAN comp_exp RPARAN . LBRACE statements RBRACE 
	statement : IF LPARAN comp_exp RPARAN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE 

	LBRACE	shift 37


	.	error


state 22:

	comp_exp : comp_exp OR . comp_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 15
	exp	goto 14
	comp_exp	goto 38

	.	error


state 23:

	comp_exp : comp_exp AND . comp_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 15
	exp	goto 14
	comp_exp	goto 39

	.	error


state 24:

	comp_exp : arith_exp GE . arith_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 40
	exp	goto 14

	.	error


state 25:

	comp_exp : arith_exp GT . arith_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 41
	exp	goto 14

	.	error


state 26:

	comp_exp : arith_exp LE . arith_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 42
	exp	goto 14

	.	error


state 27:

	comp_exp : arith_exp LT . arith_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 43
	exp	goto 14

	.	error


state 28:

	comp_exp : arith_exp NEQ . arith_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 44
	exp	goto 14

	.	error


state 29:

	comp_exp : arith_exp EQ . arith_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 45
	exp	goto 14

	.	error


state 30:

	arith_exp : arith_exp DIVIDE . arith_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 46
	exp	goto 14

	.	error


state 31:

	arith_exp : arith_exp TIMES . arith_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 47
	exp	goto 14

	.	error


state 32:

	arith_exp : arith_exp MINUS . arith_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 48
	exp	goto 14

	.	error


state 33:

	arith_exp : arith_exp PLUS . arith_exp 

	ID	shift 17
	INT_CONST	shift 16

	arith_exp	goto 49
	exp	goto 14

	.	error


state 34:

	statement : WHILE LPARAN comp_exp RPARAN . LBRACE statements RBRACE 

	LBRACE	shift 50


	.	error


state 35:

	statement : INT ID ASSIGN arith_exp . SEMICOLON 
	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	SEMICOLON	shift 51


	.	error


state 36:

	statement : ID ASSIGN arith_exp SEMICOLON .  (reduce by rule 7)



	.	reduce by rule 7


state 37:

	statement : IF LPARAN comp_exp RPARAN LBRACE . statements RBRACE 
	statement : IF LPARAN comp_exp RPARAN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE 

	ID	shift 7
	INT	shift 6
	WHILE	shift 5
	IF	shift 4
	NIL	shift 3

	statements	goto 52
	statement	goto 1

	.	error


state 38:

	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp . OR comp_exp 
	comp_exp : comp_exp OR comp_exp .  (reduce by rule 9)

	AND	shift 23


	.	reduce by rule 9


state 39:

	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp AND comp_exp .  (reduce by rule 8)
	comp_exp : comp_exp . OR comp_exp 



	.	reduce by rule 8


state 40:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp GE arith_exp .  (reduce by rule 13)

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 13


state 41:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp GT arith_exp .  (reduce by rule 15)

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 15


state 42:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp LE arith_exp .  (reduce by rule 12)

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 12


state 43:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp LT arith_exp .  (reduce by rule 11)

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 11


state 44:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp NEQ arith_exp .  (reduce by rule 14)

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 14


state 45:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp EQ arith_exp .  (reduce by rule 10)

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 10


state 46:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	arith_exp : arith_exp DIVIDE arith_exp .  (reduce by rule 19)



	.	reduce by rule 19


state 47:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp TIMES arith_exp .  (reduce by rule 18)
	arith_exp : arith_exp . DIVIDE arith_exp 



	.	reduce by rule 18


state 48:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp MINUS arith_exp .  (reduce by rule 17)
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 17


state 49:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp PLUS arith_exp .  (reduce by rule 16)
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 16


state 50:

	statement : WHILE LPARAN comp_exp RPARAN LBRACE . statements RBRACE 

	ID	shift 7
	INT	shift 6
	WHILE	shift 5
	IF	shift 4
	NIL	shift 3

	statements	goto 53
	statement	goto 1

	.	error


state 51:

	statement : INT ID ASSIGN arith_exp SEMICOLON .  (reduce by rule 6)



	.	reduce by rule 6


state 52:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements . RBRACE 
	statement : IF LPARAN comp_exp RPARAN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE 

	RBRACE	shift 54


	.	error


state 53:

	statement : WHILE LPARAN comp_exp RPARAN LBRACE statements . RBRACE 

	RBRACE	shift 55


	.	error


state 54:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE .  (reduce by rule 4)
	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE 

	ELSE	shift 56


	.	reduce by rule 4


state 55:

	statement : WHILE LPARAN comp_exp RPARAN LBRACE statements RBRACE .  (reduce by rule 3)



	.	reduce by rule 3


state 56:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE 

	LBRACE	shift 57


	.	error


state 57:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE 

	ID	shift 7
	INT	shift 6
	WHILE	shift 5
	IF	shift 4
	NIL	shift 3

	statements	goto 58
	statement	goto 1

	.	error


state 58:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE 

	RBRACE	shift 59


	.	error


state 59:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .  (reduce by rule 5)



	.	reduce by rule 5


state 60:


	EOF	accept


	.	error

75 of 186 action table entries left after compaction
47 goto table entries
