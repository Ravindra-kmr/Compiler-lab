
state 0:

	start : . statements 

	ID	shift 6
	INT	shift 5
	WHILE	shift 4
	IF	shift 3

	start	goto 59
	statements	goto 2
	statement	goto 1

	.	reduce by rule 2


state 1:

	statements : statement . statements 

	ID	shift 6
	INT	shift 5
	WHILE	shift 4
	IF	shift 3

	statements	goto 7
	statement	goto 1

	.	reduce by rule 2


state 2:

	start : statements .  (reduce by rule 0)



	.	reduce by rule 0


state 3:

	statement : IF . LPARAN comp_exp RPARAN LBRACE statements RBRACE 
	statement : IF . LPARAN comp_exp RPARAN LBRACE statements RBRACE ELSE LBRACE statements RBRACE 

	LPARAN	shift 8


	.	error


state 4:

	statement : WHILE . LPARAN comp_exp RPARAN LBRACE statements RBRACE 

	LPARAN	shift 9


	.	error


state 5:

	statement : INT . ID ASSIGN arith_exp SEMICOLON 

	ID	shift 10


	.	error


state 6:

	statement : ID . ASSIGN arith_exp SEMICOLON 

	ASSIGN	shift 11


	.	error


state 7:

	statements : statement statements .  (reduce by rule 1)



	.	reduce by rule 1


state 8:

	statement : IF LPARAN . comp_exp RPARAN LBRACE statements RBRACE 
	statement : IF LPARAN . comp_exp RPARAN LBRACE statements RBRACE ELSE LBRACE statements RBRACE 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 14
	exp	goto 13
	comp_exp	goto 12

	.	error


state 9:

	statement : WHILE LPARAN . comp_exp RPARAN LBRACE statements RBRACE 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 14
	exp	goto 13
	comp_exp	goto 17

	.	error


state 10:

	statement : INT ID . ASSIGN arith_exp SEMICOLON 

	ASSIGN	shift 18


	.	error


state 11:

	statement : ID ASSIGN . arith_exp SEMICOLON 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 19
	exp	goto 13

	.	error


state 12:

	statement : IF LPARAN comp_exp . RPARAN LBRACE statements RBRACE 
	statement : IF LPARAN comp_exp . RPARAN LBRACE statements RBRACE ELSE LBRACE statements RBRACE 
	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp . OR comp_exp 

	AND	shift 22
	OR	shift 21
	RPARAN	shift 20


	.	error


state 13:

	arith_exp : exp .  (reduce by rule 20)



	.	reduce by rule 20


state 14:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp . EQ arith_exp 
	comp_exp : arith_exp . LT arith_exp 
	comp_exp : arith_exp . LE arith_exp 
	comp_exp : arith_exp . GE arith_exp 
	comp_exp : arith_exp . NEQ arith_exp 
	comp_exp : arith_exp . GT arith_exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23


	.	error


state 15:

	exp : INT_CONST .  (reduce by rule 22)



	.	reduce by rule 22


state 16:

	exp : ID .  (reduce by rule 21)



	.	reduce by rule 21


state 17:

	statement : WHILE LPARAN comp_exp . RPARAN LBRACE statements RBRACE 
	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp . OR comp_exp 

	AND	shift 22
	OR	shift 21
	RPARAN	shift 33


	.	error


state 18:

	statement : INT ID ASSIGN . arith_exp SEMICOLON 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 34
	exp	goto 13

	.	error


state 19:

	statement : ID ASSIGN arith_exp . SEMICOLON 
	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	SEMICOLON	shift 35


	.	error


state 20:

	statement : IF LPARAN comp_exp RPARAN . LBRACE statements RBRACE 
	statement : IF LPARAN comp_exp RPARAN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE 

	LBRACE	shift 36


	.	error


state 21:

	comp_exp : comp_exp OR . comp_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 14
	exp	goto 13
	comp_exp	goto 37

	.	error


state 22:

	comp_exp : comp_exp AND . comp_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 14
	exp	goto 13
	comp_exp	goto 38

	.	error


state 23:

	comp_exp : arith_exp GE . arith_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 39
	exp	goto 13

	.	error


state 24:

	comp_exp : arith_exp GT . arith_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 40
	exp	goto 13

	.	error


state 25:

	comp_exp : arith_exp LE . arith_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 41
	exp	goto 13

	.	error


state 26:

	comp_exp : arith_exp LT . arith_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 42
	exp	goto 13

	.	error


state 27:

	comp_exp : arith_exp NEQ . arith_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 43
	exp	goto 13

	.	error


state 28:

	comp_exp : arith_exp EQ . arith_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 44
	exp	goto 13

	.	error


state 29:

	arith_exp : arith_exp DIVIDE . arith_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 45
	exp	goto 13

	.	error


state 30:

	arith_exp : arith_exp TIMES . arith_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 46
	exp	goto 13

	.	error


state 31:

	arith_exp : arith_exp MINUS . arith_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 47
	exp	goto 13

	.	error


state 32:

	arith_exp : arith_exp PLUS . arith_exp 

	ID	shift 16
	INT_CONST	shift 15

	arith_exp	goto 48
	exp	goto 13

	.	error


state 33:

	statement : WHILE LPARAN comp_exp RPARAN . LBRACE statements RBRACE 

	LBRACE	shift 49


	.	error


state 34:

	statement : INT ID ASSIGN arith_exp . SEMICOLON 
	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	SEMICOLON	shift 50


	.	error


state 35:

	statement : ID ASSIGN arith_exp SEMICOLON .  (reduce by rule 7)



	.	reduce by rule 7


state 36:

	statement : IF LPARAN comp_exp RPARAN LBRACE . statements RBRACE 
	statement : IF LPARAN comp_exp RPARAN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE 

	ID	shift 6
	INT	shift 5
	WHILE	shift 4
	IF	shift 3

	statements	goto 51
	statement	goto 1

	.	reduce by rule 2


state 37:

	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp . OR comp_exp 
	comp_exp : comp_exp OR comp_exp .  (reduce by rule 9)

	AND	shift 22


	.	reduce by rule 9


state 38:

	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp AND comp_exp .  (reduce by rule 8)
	comp_exp : comp_exp . OR comp_exp 



	.	reduce by rule 8


state 39:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp GE arith_exp .  (reduce by rule 13)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 13


state 40:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp GT arith_exp .  (reduce by rule 15)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 15


state 41:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp LE arith_exp .  (reduce by rule 12)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 12


state 42:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp LT arith_exp .  (reduce by rule 11)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 11


state 43:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp NEQ arith_exp .  (reduce by rule 14)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 14


state 44:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp EQ arith_exp .  (reduce by rule 10)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 10


state 45:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	arith_exp : arith_exp DIVIDE arith_exp .  (reduce by rule 19)



	.	reduce by rule 19


state 46:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp TIMES arith_exp .  (reduce by rule 18)
	arith_exp : arith_exp . DIVIDE arith_exp 



	.	reduce by rule 18


state 47:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp MINUS arith_exp .  (reduce by rule 17)
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 17


state 48:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp PLUS arith_exp .  (reduce by rule 16)
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 16


state 49:

	statement : WHILE LPARAN comp_exp RPARAN LBRACE . statements RBRACE 

	ID	shift 6
	INT	shift 5
	WHILE	shift 4
	IF	shift 3

	statements	goto 52
	statement	goto 1

	.	reduce by rule 2


state 50:

	statement : INT ID ASSIGN arith_exp SEMICOLON .  (reduce by rule 6)



	.	reduce by rule 6


state 51:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements . RBRACE 
	statement : IF LPARAN comp_exp RPARAN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE 

	RBRACE	shift 53


	.	error


state 52:

	statement : WHILE LPARAN comp_exp RPARAN LBRACE statements . RBRACE 

	RBRACE	shift 54


	.	error


state 53:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE .  (reduce by rule 4)
	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE 

	ELSE	shift 55


	.	reduce by rule 4


state 54:

	statement : WHILE LPARAN comp_exp RPARAN LBRACE statements RBRACE .  (reduce by rule 3)



	.	reduce by rule 3


state 55:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE 

	LBRACE	shift 56


	.	error


state 56:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE 

	ID	shift 6
	INT	shift 5
	WHILE	shift 4
	IF	shift 3

	statements	goto 57
	statement	goto 1

	.	reduce by rule 2


state 57:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE 

	RBRACE	shift 58


	.	error


state 58:

	statement : IF LPARAN comp_exp RPARAN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .  (reduce by rule 5)



	.	reduce by rule 5


state 59:


	EOF	accept


	.	error

74 of 180 action table entries left after compaction
47 goto table entries
