
state 0:

	start : . statements 

	ID	shift 7
	INTEGER_TYPE	shift 6
	WHILE	shift 5
	IF	shift 4
	NIL	shift 3

	start	goto 64
	statements	goto 2
	statement	goto 1

	.	error


state 1:

	statements : statement . SEMICOLON statements 

	SEMICOLON	shift 8


	.	error


state 2:

	start : statements .  (reduce by rule 0)



	.	reduce by rule 0


state 3:

	statements : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 4:

	statement : IF . LBRACK comp_exp RBRACK LPARAN statements RPARAN 
	statement : IF . LBRACK comp_exp RBRACK LPARAN statements RPARAN ELSE LPARAN statements RPARAN 

	LBRACK	shift 9


	.	error


state 5:

	statement : WHILE . LPARAN comp_exp RPARAN LBRACE statements RBRACE 

	LPARAN	shift 10


	.	error


state 6:

	statement : INTEGER_TYPE . ID EQ arith_exp 

	ID	shift 11


	.	error


state 7:

	statement : ID . EQ arith_exp 

	EQ	shift 12


	.	error


state 8:

	statements : statement SEMICOLON . statements 

	ID	shift 7
	INTEGER_TYPE	shift 6
	WHILE	shift 5
	IF	shift 4
	NIL	shift 3

	statements	goto 13
	statement	goto 1

	.	error


state 9:

	statement : IF LBRACK . comp_exp RBRACK LPARAN statements RPARAN 
	statement : IF LBRACK . comp_exp RBRACK LPARAN statements RPARAN ELSE LPARAN statements RPARAN 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 16
	exp	goto 15
	comp_exp	goto 14

	.	error


state 10:

	statement : WHILE LPARAN . comp_exp RPARAN LBRACE statements RBRACE 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 16
	exp	goto 15
	comp_exp	goto 20

	.	error


state 11:

	statement : INTEGER_TYPE ID . EQ arith_exp 

	EQ	shift 21


	.	error


state 12:

	statement : ID EQ . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 22
	exp	goto 15

	.	error


state 13:

	statements : statement SEMICOLON statements .  (reduce by rule 1)



	.	reduce by rule 1


state 14:

	statement : IF LBRACK comp_exp . RBRACK LPARAN statements RPARAN 
	statement : IF LBRACK comp_exp . RBRACK LPARAN statements RPARAN ELSE LPARAN statements RPARAN 
	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp . OR comp_exp 
	comp_exp : comp_exp . EEQ comp_exp 

	EEQ	shift 26
	AND	shift 25
	OR	shift 24
	RBRACK	shift 23


	.	error


state 15:

	arith_exp : exp .  (reduce by rule 21)



	.	reduce by rule 21


state 16:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp . EEQ arith_exp 
	comp_exp : arith_exp . LT arith_exp 
	comp_exp : arith_exp . LE arith_exp 
	comp_exp : arith_exp . GE arith_exp 
	comp_exp : arith_exp . NEQ arith_exp 
	comp_exp : arith_exp . GT arith_exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EEQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27


	.	error


state 17:

	arith_exp : LBRACK . arith_exp RBRACK 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 37
	exp	goto 15

	.	error


state 18:

	exp : INT .  (reduce by rule 24)



	.	reduce by rule 24


state 19:

	exp : ID .  (reduce by rule 23)



	.	reduce by rule 23


state 20:

	statement : WHILE LPARAN comp_exp . RPARAN LBRACE statements RBRACE 
	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp . OR comp_exp 
	comp_exp : comp_exp . EEQ comp_exp 

	EEQ	shift 26
	AND	shift 25
	OR	shift 24
	RPARAN	shift 38


	.	error


state 21:

	statement : INTEGER_TYPE ID EQ . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 39
	exp	goto 15

	.	error


state 22:

	statement : ID EQ arith_exp .  (reduce by rule 7)
	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 7


state 23:

	statement : IF LBRACK comp_exp RBRACK . LPARAN statements RPARAN 
	statement : IF LBRACK comp_exp RBRACK . LPARAN statements RPARAN ELSE LPARAN statements RPARAN 

	LPARAN	shift 40


	.	error


state 24:

	comp_exp : comp_exp OR . comp_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 16
	exp	goto 15
	comp_exp	goto 41

	.	error


state 25:

	comp_exp : comp_exp AND . comp_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 16
	exp	goto 15
	comp_exp	goto 42

	.	error


state 26:

	comp_exp : comp_exp EEQ . comp_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 16
	exp	goto 15
	comp_exp	goto 43

	.	error


state 27:

	comp_exp : arith_exp GE . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 44
	exp	goto 15

	.	error


state 28:

	comp_exp : arith_exp GT . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 45
	exp	goto 15

	.	error


state 29:

	comp_exp : arith_exp LE . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 46
	exp	goto 15

	.	error


state 30:

	comp_exp : arith_exp LT . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 47
	exp	goto 15

	.	error


state 31:

	comp_exp : arith_exp NEQ . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 48
	exp	goto 15

	.	error


state 32:

	comp_exp : arith_exp EEQ . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 49
	exp	goto 15

	.	error


state 33:

	arith_exp : arith_exp DIVIDE . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 50
	exp	goto 15

	.	error


state 34:

	arith_exp : arith_exp TIMES . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 51
	exp	goto 15

	.	error


state 35:

	arith_exp : arith_exp MINUS . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 52
	exp	goto 15

	.	error


state 36:

	arith_exp : arith_exp PLUS . arith_exp 

	ID	shift 19
	INT	shift 18
	LBRACK	shift 17

	arith_exp	goto 53
	exp	goto 15

	.	error


state 37:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	arith_exp : LBRACK arith_exp . RBRACK 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	RBRACK	shift 54


	.	error


state 38:

	statement : WHILE LPARAN comp_exp RPARAN . LBRACE statements RBRACE 

	LBRACE	shift 55


	.	error


state 39:

	statement : INTEGER_TYPE ID EQ arith_exp .  (reduce by rule 6)
	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 6


state 40:

	statement : IF LBRACK comp_exp RBRACK LPARAN . statements RPARAN 
	statement : IF LBRACK comp_exp RBRACK LPARAN . statements RPARAN ELSE LPARAN statements RPARAN 

	ID	shift 7
	INTEGER_TYPE	shift 6
	WHILE	shift 5
	IF	shift 4
	NIL	shift 3

	statements	goto 56
	statement	goto 1

	.	error


state 41:

	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp . OR comp_exp 
	comp_exp : comp_exp OR comp_exp .  (reduce by rule 9)
	comp_exp : comp_exp . EEQ comp_exp 

	EEQ	shift 26
	AND	shift 25


	.	reduce by rule 9


state 42:

	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp AND comp_exp .  (reduce by rule 8)
	comp_exp : comp_exp . OR comp_exp 
	comp_exp : comp_exp . EEQ comp_exp 

	EEQ	shift 26


	.	reduce by rule 8


state 43:

	comp_exp : comp_exp . AND comp_exp 
	comp_exp : comp_exp . OR comp_exp 
	comp_exp : comp_exp . EEQ comp_exp 
	comp_exp : comp_exp EEQ comp_exp .  (reduce by rule 10)



	.	reduce by rule 10


state 44:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp GE arith_exp .  (reduce by rule 14)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 14


state 45:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp GT arith_exp .  (reduce by rule 16)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 16


state 46:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp LE arith_exp .  (reduce by rule 13)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 13


state 47:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp LT arith_exp .  (reduce by rule 12)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 12


state 48:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp NEQ arith_exp .  (reduce by rule 15)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 15


state 49:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	comp_exp : arith_exp EEQ arith_exp .  (reduce by rule 11)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 11


state 50:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 
	arith_exp : arith_exp DIVIDE arith_exp .  (reduce by rule 20)



	.	reduce by rule 20


state 51:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp TIMES arith_exp .  (reduce by rule 19)
	arith_exp : arith_exp . DIVIDE arith_exp 



	.	reduce by rule 19


state 52:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp MINUS arith_exp .  (reduce by rule 18)
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 18


state 53:

	arith_exp : arith_exp . PLUS arith_exp 
	arith_exp : arith_exp PLUS arith_exp .  (reduce by rule 17)
	arith_exp : arith_exp . MINUS arith_exp 
	arith_exp : arith_exp . TIMES arith_exp 
	arith_exp : arith_exp . DIVIDE arith_exp 

	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 17


state 54:

	arith_exp : LBRACK arith_exp RBRACK .  (reduce by rule 22)



	.	reduce by rule 22


state 55:

	statement : WHILE LPARAN comp_exp RPARAN LBRACE . statements RBRACE 

	ID	shift 7
	INTEGER_TYPE	shift 6
	WHILE	shift 5
	IF	shift 4
	NIL	shift 3

	statements	goto 57
	statement	goto 1

	.	error


state 56:

	statement : IF LBRACK comp_exp RBRACK LPARAN statements . RPARAN 
	statement : IF LBRACK comp_exp RBRACK LPARAN statements . RPARAN ELSE LPARAN statements RPARAN 

	RPARAN	shift 58


	.	error


state 57:

	statement : WHILE LPARAN comp_exp RPARAN LBRACE statements . RBRACE 

	RBRACE	shift 59


	.	error


state 58:

	statement : IF LBRACK comp_exp RBRACK LPARAN statements RPARAN .  (reduce by rule 4)
	statement : IF LBRACK comp_exp RBRACK LPARAN statements RPARAN . ELSE LPARAN statements RPARAN 

	ELSE	shift 60


	.	reduce by rule 4


state 59:

	statement : WHILE LPARAN comp_exp RPARAN LBRACE statements RBRACE .  (reduce by rule 3)



	.	reduce by rule 3


state 60:

	statement : IF LBRACK comp_exp RBRACK LPARAN statements RPARAN ELSE . LPARAN statements RPARAN 

	LPARAN	shift 61


	.	error


state 61:

	statement : IF LBRACK comp_exp RBRACK LPARAN statements RPARAN ELSE LPARAN . statements RPARAN 

	ID	shift 7
	INTEGER_TYPE	shift 6
	WHILE	shift 5
	IF	shift 4
	NIL	shift 3

	statements	goto 62
	statement	goto 1

	.	error


state 62:

	statement : IF LBRACK comp_exp RBRACK LPARAN statements RPARAN ELSE LPARAN statements . RPARAN 

	RPARAN	shift 63


	.	error


state 63:

	statement : IF LBRACK comp_exp RBRACK LPARAN statements RPARAN ELSE LPARAN statements RPARAN .  (reduce by rule 5)



	.	reduce by rule 5


state 64:


	EOF	accept


	.	error

84 of 220 action table entries left after compaction
52 goto table entries
